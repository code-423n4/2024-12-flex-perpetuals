{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x036934d4a6669287461Aa5a48AC35945d8E25dd4",
    "txHash": "0xd8afbc77ccea4226b2d29327d53c1d3e4af25abd51624153a65770b9161304d0"
  },
  "proxies": [
    {
      "address": "0xDF54a3db4FC9f294b0Dbd83c108A459Bf734e22A",
      "txHash": "0x07ed44c10e305399ba92999b7ddd4ae28a1d827d8c7cb18ae9cbb82ab3591033",
      "kind": "transparent"
    },
    {
      "address": "0xB8CFd1879d3622b8e32AcB2610f49508F1F4FD5d",
      "txHash": "0x4f0d869a0c3e500c9dc40d4bea465e00cc3987a2357a059ff7212557d57a9fad",
      "kind": "transparent"
    },
    {
      "address": "0xD11eC8928936E10eF319c9b5Fbb54D2c9D5ec7F3",
      "txHash": "0xf41e5223ef6455928aa1d5888db9e4614ce074b2abfd80a8a8a44698c2a05047",
      "kind": "transparent"
    },
    {
      "address": "0x36DaFB41293685A26aba689Ff33C2059D3dd5cb7",
      "txHash": "0xe67c2c2f37ff2ab5cce3635fabb83aa1cb5e6d5b8553ee46ef17cbe9db20fdf8",
      "kind": "transparent"
    },
    {
      "address": "0x9865F98F6A530856C57e14854833e6282438bfb6",
      "txHash": "0xa5c2341b06568025f292056d4c6db9a8c86e308339079271332f44a66947c562",
      "kind": "transparent"
    },
    {
      "address": "0x4A98dd2737E1a0f2E3105820BCfd100f85bB3593",
      "txHash": "0x96481ccaad9db47474cbc2515d21d68bc64646d10ff04b0a6914cac99ccc98f1",
      "kind": "transparent"
    },
    {
      "address": "0xB32620392fE450E4f5c7483bF6842004CA775a8E",
      "txHash": "0x99759a8a1f91b3ad9aab27db7b2c477f7f8f3b2320e50d47e17009b9ea5e09df",
      "kind": "transparent"
    },
    {
      "address": "0x36C2FA0f401cBED335C85f45B221ad08b1E48034",
      "txHash": "0x453be8a655fa735e707590a6dc6f8758f815da2027d68415257fe350b15ce19b",
      "kind": "transparent"
    },
    {
      "address": "0xba07bfCBa46834E18F6Eb07e31843d4e2240E524",
      "txHash": "0xae66097e92bc86085bfb09a07e2c14d0464f0cc89b7755f24a96df8e5e30ad4a",
      "kind": "transparent"
    },
    {
      "address": "0xD96dE76BC8c175794dc7BBCA0A4f04148D843046",
      "txHash": "0xa14f44139c186aabcd922a4529cb726e99d3cb00432a66900326bf19f3af98d0",
      "kind": "transparent"
    },
    {
      "address": "0xEf726B51E70D8eD4dBc4A2b12d31Ab4007b27678",
      "txHash": "0x5bfbdcec6cc3d6805f7bc40aae41edaa199dd4847b67ba828568305fc13cd3cc",
      "kind": "transparent"
    },
    {
      "address": "0x88267F2A38eaF84562d6f0eC03E6b9E6BCDc8b73",
      "txHash": "0x89d5a296e2ce96a53921d46cd78ef5cf6abaab146f3738ebde15909978a8f77f",
      "kind": "transparent"
    },
    {
      "address": "0xB261fe12A48d1804096443cD3d79DC6d3D8f4F44",
      "txHash": "0x35de4be2aac674ef9271baef2718d69b48c3e0a5e2dc8a4998b30d00da811ed3",
      "kind": "transparent"
    },
    {
      "address": "0xE0DF60d32011b139B86D03347184A92158BdDCdE",
      "txHash": "0x310a1aa8269e39e2c2aae16336b39b7f4a3ce58e3f3c10b724495cdec3266d79",
      "kind": "transparent"
    },
    {
      "address": "0xE3E552B01b1A460910B1F7997dFFAc6E81b42C7E",
      "txHash": "0xfd849ed7232158215a2b83b73226be73450db8894173bdfdaaeb4a69bd84b468",
      "kind": "transparent"
    },
    {
      "address": "0xA962fF080a3157F6d142dB0C6F30feDeA28A4e0C",
      "txHash": "0x61662dc62dc3246feeb8a4092cf0f88ba1896aee97b09fbab8bbe6c9ae4b2964",
      "kind": "transparent"
    },
    {
      "address": "0xf43A3bCDB8c9ACa51Dc1f1888252900054e133C7",
      "txHash": "0x26a64d40f9f543dc2eef614d7e9d0d66d651980b422c4ea8cae4e157fe669ea3",
      "kind": "transparent"
    },
    {
      "address": "0x7aB55E8bbe1210A55c8e2468E90A07B3E18b50Cc",
      "txHash": "0x0cf34125c2aaa29fe078b67d5574561c216a6ea45f30cabb00fbef544f33dd63",
      "kind": "transparent"
    },
    {
      "address": "0xE925d634F490F087966DEA677C8167Cf3ba75d68",
      "txHash": "0x89faa23e34245251191e6c2a5e1986e1ddb8fce141fd409ba7852d2f4159c0d0",
      "kind": "transparent"
    },
    {
      "address": "0x3456ad721Da9e8D6Aa6Ce936844a4Bf2f3e41183",
      "txHash": "0x129e04caa63d9460f7234c0014c3ff24514f09b25f419f9796f93814a3622f26",
      "kind": "transparent"
    },
    {
      "address": "0x8b0953C39288Bb82D2074E056c76f0be62EB5614",
      "txHash": "0xeba3f5b7666b4085d36b394ed28b6f4aee8a6f2d03f4a2a7f5ed6d2775c3ad50",
      "kind": "transparent"
    },
    {
      "address": "0x4f902Dc505A78C56bAB9b4E5f0cF5f166f6B0B91",
      "txHash": "0xb59593fadf9330c2802d73481d75f6738657a9e6060eb4eb7150b0c8368e9755",
      "kind": "transparent"
    },
    {
      "address": "0x720C7feF1C3a572432e6dE8c72daF22Bd5107e68",
      "txHash": "0x22a38fa42cdc581c6975309095bb01143a714f8e25288e5751e23f1b3be48d26",
      "kind": "transparent"
    },
    {
      "address": "0xC8933b27Ca924d08E9E389901920C0166658C727",
      "txHash": "0xdf0ddaa69a8930187229edfa853a11853bb5f3379d6cc72b489c1eb89d2e7999",
      "kind": "transparent"
    },
    {
      "address": "0x7EeBb2852983Eb7CFa063F3F194dDc2E082f3228",
      "txHash": "0x16826e150f26ceb4a97f12411cf7766d7ba22d826524612edbd8747940818d85",
      "kind": "transparent"
    },
    {
      "address": "0xBaDB27718087B8d2D490479515E6222D9A20CDf4",
      "txHash": "0x6dca330da6f055edbeac5e7e82cbe4ee8f6fa0c91ebacde0f34e134eb4b1f5c2",
      "kind": "transparent"
    },
    {
      "address": "0x9b95A42832aBa0D96AD40F8B6CcC4404924C51c8",
      "txHash": "0x6b497868a776813a5fe89306a301757a0df7c1dddb5f1da99d50265df14e44b8",
      "kind": "transparent"
    },
    {
      "address": "0x8146fcc39216c1733C7d075398F5F791729Cfb91",
      "txHash": "0x1c6a0a1615ddb5303fa4c861d757d39b4cf7b87cd2ebacffa4a9247c57adbc7e",
      "kind": "transparent"
    },
    {
      "address": "0x8923A5e874E4C614f28cb7814D22B65C934f4401",
      "txHash": "0x45b045a48182efe03f3edd4fc263e867f0d89416edd1ea1d97ff20cd02e36581",
      "kind": "transparent"
    },
    {
      "address": "0x5a820DCAF28522Bc7a655Ef72687D16B732C27DC",
      "txHash": "0xd0a4ce948ace350ac9037f380ce51441e35dbedddfb2275afed1d28def4d5c26",
      "kind": "transparent"
    },
    {
      "address": "0x83CC3519fA8F501Cd0C325f4F5e34Ac0B67c22fE",
      "txHash": "0x02d7d9c5bf36599c28050c422e44e9269bd2cd7e2d5f0b5ea10c918dfe375d38",
      "kind": "transparent"
    },
    {
      "address": "0x2171b665B37f3be45b4BEB740728EbF5B8CC6709",
      "txHash": "0x5f9cb44724d5bbc1abfeba8749e49ce35f031c16e8520ab62c8d0eb91dd2f385",
      "kind": "transparent"
    },
    {
      "address": "0xf96b8cd6619E22A63E91960e8827B74256c913Ef",
      "txHash": "0x14aec67446c6e50a4233898ad82aaca9dde9495a432ccab72cb18c1d5417a252",
      "kind": "transparent"
    },
    {
      "address": "0xEcE4e6457E68c88B11cEddA47B35942434Cf6e2a",
      "txHash": "0x1e02c7fa3a58d34cffae46c2c136357ff4aa540683f6245c6e63e262e417f716",
      "kind": "transparent"
    },
    {
      "address": "0x7e7923f809345A919f28cA1dE5a5B375b3B1874b",
      "txHash": "0x22c2cc5dd5c3a1b81eb34f3fbd692bf08b0e798202155b4cd5c6fcc3e070e6cd",
      "kind": "transparent"
    },
    {
      "address": "0x686fA9AA62A8571Be022ba72f93Da83D8b9814e5",
      "txHash": "0x71f3711e54b06df9f0039897a0e697e86576b433b52e625ce7a689719d4a49b0",
      "kind": "transparent"
    },
    {
      "address": "0x937DbD8bB0E155D4c3773dE366E4ae9f421411e2",
      "txHash": "0x07496db089575ce0808baf406098e1a92479cae5304c7adc277f03c87fdf1168",
      "kind": "transparent"
    },
    {
      "address": "0x932BDbdd8Ea527f1531DCf36b6e10c4138006A14",
      "txHash": "0x20e8ad04aa58cdc63cda8208be7b211b459e423cad7b817ca3df771c42091705",
      "kind": "transparent"
    },
    {
      "address": "0xe0cb00Ed6f01226763e74f3f617F952f99643eC7",
      "txHash": "0x80e9cd434e4589e1d658b6cc59fd11664d3638b2817b2552577c272e1dab8b02",
      "kind": "transparent"
    },
    {
      "address": "0xF4573e1354ee94eBB5B5C1C2Ae9A8Fa6fF4203dF",
      "txHash": "0xcf5a7e9b29ec26e0632337de0dfb3508871d5949cff55f7bacca0d07bc983eb5",
      "kind": "transparent"
    },
    {
      "address": "0x7A0dA71F3D4e6fe9Da214808971eCF15a0407765",
      "txHash": "0xa4bd58d872e18aa3c65c81a5d40f569613a7ec07d176c727d873d4765c12f581",
      "kind": "transparent"
    },
    {
      "address": "0x42A460211d20EbCaA6982AE5f4b602dCB9973B1c",
      "txHash": "0x0b64ae88131670ba514c558180adc2dc4bb7a8ca9aecfffab80a309992ac4e4f",
      "kind": "transparent"
    },
    {
      "address": "0xf95F018F17e05E68262E69A070d106B63Ce55317",
      "txHash": "0xc88afb85c1e4d71579e88b4d6d36b6cffc81938650324b6d85cd98e97b8d3534",
      "kind": "transparent"
    },
    {
      "address": "0x85da4D806D53120AF8f3Bd2D328549851Da49617",
      "txHash": "0x6611aca1eba39387979b529ceb57e783c905337581bcf94925445805070b94df",
      "kind": "transparent"
    },
    {
      "address": "0x0921D4A78E67f4B6229C134f878A0Af08eaD4ad6",
      "txHash": "0x5b986b3a74b93f41b6e02d447b61a2f7cb4ce555ed4e77a05f5dddf24560c6ab",
      "kind": "transparent"
    },
    {
      "address": "0x0C265F1201828d4A89ae1DbEb9b77C2Fab96Bb18",
      "txHash": "0x6cc51045ebf35842a06f4295f8f93ee013e0078f37352fa07b893e4c1e338cad",
      "kind": "transparent"
    },
    {
      "address": "0x43C3f523d6D17a99A2E59A997dfe059b7a5a95e2",
      "txHash": "0xece7cfb98c2878ee88e681b69480a4e9904c370ca845e9a93d4630e5e2f82d68",
      "kind": "transparent"
    },
    {
      "address": "0x0E7D2A832e6087BF45a55e15C5F8D48539cbDD48",
      "txHash": "0xf646e48f82c402b4dd12dd816d9ca0f08fe92d46ed558dfee91eef5704045ea9",
      "kind": "transparent"
    },
    {
      "address": "0xA02eD38bA283f2A529d0582Ee3cc2f8725765db8",
      "txHash": "0x9025d7ba4803e25579ffd3c99fb5dfa5dd2910436c722dff18cce6a3cb40dd36",
      "kind": "transparent"
    }
  ],
  "impls": {
    "74d8c7f0fad33c1512fe748b7dd0afa4dfa048d6150759dca121323df8bfd2d9": {
      "address": "0xB4Ec261C050dec3b3A6048296F54c160B99a4A44",
      "txHash": "0x81a740b28f494588031ab8d518d7bd10cc33b8f2d6ce14877e58e80fa3745dbc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:24"
          },
          {
            "label": "minPublishTime",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:28"
          },
          {
            "label": "publishTimeDiff",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:31"
          },
          {
            "label": "mapAssetIdToIndex",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:33"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:34"
          },
          {
            "label": "indexCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:35"
          },
          {
            "label": "isUpdaters",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3ea426e4c71b7cb6083a4ab2e887bac8d8b7a9168cfb30554c608b22c4481b4": {
      "address": "0xd798DA60958B9446abcB278e992b49303D575B36",
      "txHash": "0x082c769bd2b0bba74e31d58c40cf7138cf521bb4f09b79520a452bc5e9e95788",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)30309",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:17"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)30269_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)30309": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)30269_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)30269_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d04cbbc9c8157a29415f554155b6e074f86055de64d4a539fcedc56b13eafd1a": {
      "address": "0x85894c1FbFDd882485BeB25704935f3695ceD07d",
      "txHash": "0xe5915bc05a8db10ee5b1a7e64c71501c50801d727a6859420037a6a3b8fef138",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:42"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)22841_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:43"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)22841_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)22841_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9aed2ad8ae5700a622d67238099757764a6840ca3983902abdd9b9b2da046fc7": {
      "address": "0x32729B23dFB6077EFeB8c2E5187fbFAb4C8B4839",
      "txHash": "0x4b74b3f580afd3a739b00c4b1327b614be7c27776b2a5dfcc1fc2c6e98fd347d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)44329_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:55"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)44334_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:56"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)44343_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:57"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)44346_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:58"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:63"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)44258_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)44267_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:80"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)44274_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)44307_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:83"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)44310_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)44310_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)44307_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)44258_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)44274_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)44267_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)44310_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)44258_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)44274_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)44279_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationConfig)44346_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)44329_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)44307_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "minLeverageBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 24,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)44279_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(HLPTokenConfig)44267_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SwapConfig)44334_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)44343_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3665b707ce4e61eac35000c75281dbd69ddd0e469a41941ddd53161356c17126": {
      "address": "0x6b5F46404599d1C9A1BE7601Fff528ABda9af282",
      "txHash": "0x6b6c167b7e19042ba1c74b3e4e58efad5f9966a2e1f91f8f3f7c3b5ca7073025",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)39191_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:32"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)39244_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:34"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:35"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)39223_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:37"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)39202_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)5348_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)5469_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)39244_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)39202_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)39223_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5469_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5154_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)39202_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)5348_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5154_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)39191_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)39223_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Position)39244_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "entryFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)5154_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1e85298fbd6201f410edf4abc53ae66797a1a29efd8497d6e70034a8ea58988": {
      "address": "0xd307aD3e32eB881113bB317F10758f5334772206",
      "txHash": "0x6b5dc64877d823b38be2af24b2906a17618e0d4fca4675833d5e0d87b0a5bc8d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HLP",
            "src": "src/contracts/HLP.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8f2fa1a7c8feb223f3072a3897df0750d979ae9a9e5a0cd31d70e8db7467599": {
      "address": "0xea7aF4b3D3B0B703B16D1abF13D945798971Ba7c",
      "txHash": "0x47af51a3573ad4897ea0dc0fcaf9fa51f82f1a2f6537fb44d24d7e9374e67388",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:29"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:30"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:31"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:33"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:34"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:36"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:38"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:39"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:40"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:41"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:43"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:44"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:45"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:46"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:53"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "664d4d178e467b48eefbf02bcb16a56bd595646e3234d6dac096a66115c682cf": {
      "address": "0x8447D1365c7f96be259EEe099Ff4b7a81Ca508CA",
      "txHash": "0x0b5c7b6adaa748e12a6a1c89f6f73a624d622ae4fe23224ec27ef4c376a978ec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "46a2d00b43a1b57bc6d202f42d65c42d4db60db68f3e21b606c27886cd737698": {
      "address": "0xC238d5a8eBA0f7509E4397ACa624E9d70Ca79dA0",
      "txHash": "0xfc461152033f33c2e4b7b375ca3991f5454945d73bb5376d51664394de9ba067",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:131"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:132"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:133"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)9892",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:134"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)9892": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "319bf080e652b56354e85e9841cf5237259a0dc8eb7fd2a72bf9be4769dbed5f": {
      "address": "0xEb74B390609e5b6C953d73210f3bef090E5a393F",
      "txHash": "0x067e9e3a47056ee77be5e9d36167a99459de3c60491450370178f7e1d5d29dee",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:51"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:52"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:53"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:54"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)9892",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)9892": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "35eef8012a39e3fff5f50ca517bfebf0864e0bd65e60a1ddd88c686cc1e05758": {
      "address": "0x831CA66c2Fa7E58c8202e772b443E00E019c18FF",
      "txHash": "0xe62dd9ebcc41e7a80cc0d4cf79806bf2337a49d1a81b52f510b10a754bbf264e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:74"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:75"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53f7996bc9e2a0fdea56bd177b93cb815b2c13b833d0b8aa670b85493af89b1d": {
      "address": "0x2F5d80Ff9772f952c2D1B93454e8c3dB437438ff",
      "txHash": "0xd45942939c8898be1cfac60a4b9e387ebb4ad39cf47f4f8fa6d6e4473edbb71f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:148"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:149"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:150"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:151"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)9892",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:152"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)9892": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b18be08149b9db1569b368f31d58881fe0ada838e799fd2162001927e9bdc2b": {
      "address": "0x9Df9798cEc7fF67d3BD8d1841F71167DA6bb0887",
      "txHash": "0x94e449711b65c0b2018d5bb556be89cb0d50356636461e8daca3155d6d20d8a6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:60"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:61"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:62"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:63"
          },
          {
            "label": "convertedSglpStrategy",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "41fdb35f4534c7c2c019ecb1ea67c719b18368105c52cf179302003ace3378ba": {
      "address": "0xB29A7978B66eEf108542a761D19E1F788c18524f",
      "txHash": "0x387594e08e44023bbd809db7a30f2922bc749f20e5fa9c17e016ada498bd8d10",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1063",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:20"
          },
          {
            "label": "rewardRouter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IGmxRewardRouterV2)20522",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:22"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IVaultStorage)39604",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:23"
          },
          {
            "label": "whitelistExecutors",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1063": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxRewardRouterV2)20522": {
            "label": "contract IGmxRewardRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)39604": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9725275684ef65896258fcf8fde2cfba1aecd1d3274e893ab1dbe6cf84e8a071": {
      "address": "0xb4e1d4665cc1B6138e719dFe8A15ee5F4c6B7feB",
      "txHash": "0x590878e8d1fb818beb7b4d0d137dc124f15d6b006f62c0e7a5d65baa09fc6535",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:53"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:54"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:55"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:56"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c79169e4fae54b94db6556d86e39514d4675881a16849d0d6f3f6c16bfb33f37": {
      "address": "0x93255566f5F40B698C7578B4324937865C80115d",
      "txHash": "0x3ef03e99d6e89d771479e3f6793b6279ef02a5f4a36955c9a94f5031c31cc4f0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:79"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:80"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:81"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:82"
          },
          {
            "label": "isExecuting",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:83"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)17059_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:85"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)17059_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:86"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)17059_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)25850": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)17059_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)17059_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)25850",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_uint8",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ab32ec39b97b8ec01ab19d30cfe4249ba4da581d86bb7a232a9f1de7b2b991f": {
      "address": "0xC63B1831ccA9ee5eE64A9A8fC6dF0Ff4A4fa415e",
      "txHash": "0xc1387ed444ebbfd37e7050efd0d0b37b2ad83e0efda5e30b38f527b0eea9abe3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:135"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:136"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)24436",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:137"
          },
          {
            "label": "minExecutionFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:138"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:139"
          },
          {
            "label": "isExecuting",
            "offset": 0,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:140"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 1,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:141"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)17250_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 0,
            "slot": "160",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)5626_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)5626_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(UintSet)5626_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)24436": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)17250_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)17250_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)17250_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)5154_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5626_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5154_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cf3e8e9e38570b9b0c6d77e8d88f74b71a2a06947fcb7c35736631fabbeb9603": {
      "address": "0x42aDb74C042c2D948e4f00F9FBD65e71D35bea8D",
      "txHash": "0x45993f396529d8f20aef808ca649fab57179a295e95ce14a389f96948b249b73",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:82"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:83"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:84"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:85"
          },
          {
            "label": "isExecuting",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:86"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)17491_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:88"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:89"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)17491_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)17491_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)17491_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)17491_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_uint8",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b355196ad330426db2f9c78fc552acc6dce9a2528f84c591c668900811c5659a": {
      "address": "0x8935a148499E302272d5D6C55c744db1Ae0207b7",
      "txHash": "0x3822b316dddd1c51699856b3c5c11c7e393e61654c4401e9f8c905b0818c57b5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradingStaking",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:13"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0557585e8fa11c339e54c61237d609d4ec71d41325c8a5394a11cf43dc4e68e3": {
      "address": "0x88014AD782F28Af6aF4F94496e83E673b917C158",
      "txHash": "0xd9c9853632453dcd32399ce6674f37ee05b30c8926c93c26d0dc5ad9de9b79ae",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:15"
          },
          {
            "label": "tlc",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:16"
          },
          {
            "label": "tlcStaking",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10830a90a6eaeb7c993a193752f3975246d5dae6797ca343ed8cd71cc28b7364": {
      "address": "0x9FcFF0E4AAdaa5537fEDd0680345b2f07CE4cBfC",
      "txHash": "0x42c3782cb669be1d2e41ad4eace73e9e4e0f9cf7faf2ed46a5b46d3286368a16",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:57"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:58"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:59"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:60"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7804068ce54f7f29c44b14fb296e3ebbcbdce934ee0024cab5c12433def4127e": {
      "address": "0x8bc4b320Db6FE510A5F9EA2240749f5AE5EcF4be",
      "txHash": "0x6d4737f736e695d238b07ad850d21ecb0b00128d7db34918a61f115ff31e60d7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8dda47d549d5707e43761b4629f090df7d1d3a18149c7964891694999599208b": {
      "address": "0x14c1D2E6395393c1f45e5a6ec5e85638807F0277",
      "txHash": "0xa69a842402010230b26c3e27337a96c5d6f3b518633cdbc987bee4f7d0af7d47",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:136"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:137"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)29951",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:138"
          },
          {
            "label": "minExecutionFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:139"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:140"
          },
          {
            "label": "isExecuting",
            "offset": 0,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:141"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 1,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22733_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 0,
            "slot": "160",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "168",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)29951": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22733_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)22733_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)22733_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34d9ab334d2ae9b2eb2cabbd33380c8cc8a33e39ba20a817434de588671fe351": {
      "address": "0x1Fc3F59203f990DbaeaAdfd1b04b6ba3b7958D0B",
      "txHash": "0x3fd4028bacd37edc6c6aad35102848c1f509bf305e28d90ca5aac027376745ca",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e7e3eb343c63b2a00c234e8f41a0023605b5674b12b82591bbc7c4e84e6e5bd": {
      "address": "0x6C93025423571b84453DCaad8696f8BB6BEA2E6D",
      "txHash": "0xa7b029f0ec69f81d5b598abed7f9cc803d43290357b18ef3f2e40d3b8832dc91",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:59"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:60"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:61"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:62"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "68160285329cf87ac3bfe104e5eee23cf7938d2f2e5b0fee792b72b16307a963": {
      "address": "0x7B1ed1fA665284314f2b82B0FdA31F0DC52b7e3E",
      "txHash": "0xe511d811ff3a5da0defdbc08b8deefb0d1b69a0e726ef0a9a5c41d353a16d581",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)44516_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:56"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)44521_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:57"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)44530_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:58"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)44533_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:59"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)44445_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)44454_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)44461_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)44494_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)44497_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:86"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)44497_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)44494_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)44445_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)44461_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)44454_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)44497_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)44445_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)44461_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)44466_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationConfig)44533_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)44516_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)44494_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "minLeverageBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 24,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)44466_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(HLPTokenConfig)44454_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SwapConfig)44521_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)44530_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "118f62e497d46fe6ac82b40f510c2da3b6389f416e6f65e0c7191b70ed881cc1": {
      "address": "0x45CeD6Aa20407dA0669Ea2f3C3b11c34fbaAbFBb",
      "txHash": "0x9f7852adf7d5fc5e079d10dfc5e70b8c11997b2f2dc69faeff623b9169b85f9b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)31655",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:17"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)31607_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)31655": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)31607_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)31607_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "33ac56f2322129beee56f6758108635dc5de8fab8ebed1e036f7f6dd10a1049b": {
      "address": "0x89dB8648019dDbCA502C4aaEd86491c3272b300F",
      "txHash": "0xc71ee7eece224260a5ae7a299b51bc1b7b51b6fd469b44a4839f3eaac2a0d1f0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:59"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:60"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:61"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:62"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d336b5715506476f6f9fa96ef1109ddbf47e692817e0aaca55423428d22d1a0": {
      "address": "0xeBA9D0F32BD43418667881d3618CAb30CAb1C831",
      "txHash": "0xc9f809a90725f35b7d7edee21ce7540ad0e577f268e3a1fc4e6a6656459187ed",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "222f73f2078b4e2a1be7e7cb4bb98fa07fced18ed59360e68596c42e1eeeba90": {
      "address": "0xB31e58aD65052f41B042e23ca19498780581861c",
      "txHash": "0xca517bb905d448fff09480ee4d34378ac215f6ae3d1fcba418f2aed82b05088f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:59"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:60"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:61"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:62"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "00de3c7b61ed441c945918c6ae2a61643e73c7f12f94c1db4af77015cd5463e1": {
      "address": "0xC3FbD15B93759eaa743d5DaB1186DF76b2da8Ea0",
      "txHash": "0x40bd74872509b292d33bd8ce9223e2f25b47465eb1cbecfeddbe2471ca6c660c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:136"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:137"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)30079",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:138"
          },
          {
            "label": "minExecutionFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:139"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:140"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:141"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22848_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 0,
            "slot": "160",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "168",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)30079": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22848_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)22848_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)22848_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8680a263cbbfefb0301686c63a20a8be33d475286fd6ea100b5314058482339f": {
      "address": "0x0Bd5034267014C55e2A7b424e458b8559Ae0c7e5",
      "txHash": "0x9a7b606fb289f0e6efbc4e93783c8daff543279817c065735ac337c56bfe3811",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:136"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:137"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)30241",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:138"
          },
          {
            "label": "minExecutionFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:139"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:140"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:141"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22971_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 0,
            "slot": "160",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)30241": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)22971_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8796_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)22971_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)22971_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b392fbe342e1a5ac2b524b508fb205976e80bec758985d639de4fb7be91239fc": {
      "address": "0xe1A3946Ed8AAB40B811c59A461785EA086ee9Bc3",
      "txHash": "0x9d369bb647796a71e901a6b4ac1d610a977198d24fa8e787cbcd1caf4a37de41",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a82a96804108d5a5d0c8c026ff00bd794da5f9d413104fd27a821d8a77e107d": {
      "address": "0xaD991D2af20b6fd4F9d22360e38734beCC3C1bD1",
      "txHash": "0xaf63262e888019e3c2daf8fabe6fd12092047796ebd5cfa1b27b20682b67dcbc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b3a57e3341ea3f4b1c06061b3efe90aa53bd465385ab1c3c1658a77eabc79c9d": {
      "address": "0x4f1307FB39302f048B834eCACCd82689Ec43bf54",
      "txHash": "0xae8102dac4764a1f7a128a459ed21e772e63741dad993bb6680e1721a883d0c2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:39"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d137137f23969a892abc87c1fa2028884fd7397ff43d568f2a7a2704e8199a5d": {
      "address": "0x9aCe9E1D90EDD7d020597487b36173dfBFE30b7F",
      "txHash": "0x892c0cde5fe22097114e0678256c9ac946bd41f28022b143abecb8bcc1b6aca4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:136"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:137"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)30363",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:138"
          },
          {
            "label": "minExecutionFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:139"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:140"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "156",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:141"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23093_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 0,
            "slot": "160",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)30363": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23093_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8796_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)23093_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)23093_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "02505775a90e5f46de1a0727f4d9c55ec53d2c700f497c76e260e404cf4cd150": {
      "address": "0x403c76c6d1b844675A7E6B8DacA55933206ba3BC",
      "txHash": "0xdda1501c9a1714ff468e7576af0e66cba743307c86f5239f9fa56b7827bc6111",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:47"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)29692_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:48"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:60"
          },
          {
            "label": "maxTrustPriceAge",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)29692_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)29692_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73fe391b3c38b524519f4aceb588a230aaf2f345776fbd2305fcc6b0d27fa211": {
      "address": "0x182DE546A6772ba9Ff93F7ec8698164ED31cEC51",
      "txHash": "0x29034fd0c8ce93959d504f77b71b3378df13b319be10aa4f2c9d50f658b13ff5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)46751_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:59"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)46756_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)46765_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)46768_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)46682_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46691_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46698_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)46729_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)46732_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)46732_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)46729_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)46682_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46698_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46691_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)46732_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)46682_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)46698_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)46703_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)46691_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)46768_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)46751_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)46729_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)46703_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)46756_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)46765_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "98134d76d7babb0f02ece917c38825f87189bd572e9ca65b73f7d38f514a4512": {
      "address": "0xBA8651FE1252D8B3580650bb300cba289DEB5Fad",
      "txHash": "0xb9d9147f233ccb6ba1c50b61e4ffb7a652eebf9914d364207ed4c0ee90a09e12",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)47265_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:32"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)47320_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:34"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:35"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)47299_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:37"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)47276_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)8518_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)8639_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)47320_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)47276_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)47299_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8639_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)47276_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)8518_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)47265_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)47299_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)47320_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ffc79354ea33b1f9519756fb7d48af2266dfccd5a39db2403358f3a0e8640eca": {
      "address": "0x98fA723F58464189139850fD543176724Bc59789",
      "txHash": "0x1fb82a0ed37960b7d1b7168f9847a6656fb2a2dc97dd9b005a7add0b5acaf189",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HLP",
            "src": "src/contracts/HLP.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c9447b297e3445a45667cffc72d89ee121d9d443768e07e488511b2b3b61a9d4": {
      "address": "0xBbbf9A361EEeDE1CFF204805014fD1B2499d3b9A",
      "txHash": "0x062fdec12674a5e42260c678aa1830d6a335ad4eb2701a8db2a480f8908904a0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:29"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:30"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:31"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:33"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:34"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:36"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:38"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:39"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:40"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:41"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:43"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:44"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:45"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:46"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:53"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a5da2fd40cb3fcbf679f88dd172af9b6df6ba4fd084aa43f042922cae1a81261": {
      "address": "0x9ed8A342DcF3b2927B13b9fe0793857E13A7b951",
      "txHash": "0xef53dedb9ca401fd371ac1cb83d624232e01d82c45ed0b9687ea5ee54b936db7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b08296d8161b3ec754418065cf2015d653d1fcbae546b0d0dd4d356a59b11712": {
      "address": "0x4d0ba4201fDc8a697B00e302e5908429a5149E4A",
      "txHash": "0xb06a6eab22f7238e321356edb5fa8a1fe949485ee55a7c7a4d70cc8f53dcab80",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:144"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:145"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:146"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)14988",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:147"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)14988": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b4a595e47c0157688d4fc35f0a2d9b7f15a65a10b69e96df7c2385c1165af5b3": {
      "address": "0x939ddC2bc52ACAa603Fd195025A0E891b016348e",
      "txHash": "0xf9439ec002ba9a36e002ecbfd23c0462a3140db682e94e2d4d879d7c2bb27c06",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:101"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:102"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:103"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:104"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)14988",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)14988": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ae51a7645d40e25cda15c2eb16bc99c27a68367762886e5e3b9acd8d24cb446": {
      "address": "0x95D767e12749D090A7195eF81Ddf458956FD3F69",
      "txHash": "0x87d831e441384458af1bccdba698843a1074e6fb365153d15c63a04fea079251",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:74"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:75"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed86624af4a6fe64497b72ddbd79f1826643183ead45ddedccb9e0335f797406": {
      "address": "0x138A0F16a9d6155789B96fFc00A58C8D6655019B",
      "txHash": "0x7a7d9b8e148c51613022ce8192caf57c8482faf884426750a4366bc7fbe72d9b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:170"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:171"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:172"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)14988",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)14988": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "abe47cd32b5f3dd3791783797507f3e1745133c11eeaf4c40210adf9ffd3b271": {
      "address": "0x9CcF3bc7730C0F32598fdCD35b343FAc8F693892",
      "txHash": "0x57375d65b9705a85dab2c2477162cc95a298d63d7ae4112dbf2c36b76830c062",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:72"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:73"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:74"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:75"
          },
          {
            "label": "convertedSglpStrategy",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef099bf583f1b753073d8a422b29bb04cfe14557187de08dd39562d586b0c8e8": {
      "address": "0xFDF81Fa022B9fFF7E85361B59F18EDE58F8Cf6d2",
      "txHash": "0x7e520e39dacfa123d5d09206284e5835c2f59985c78ade9e6edbe82a4d917046",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:71"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:72"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:73"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3e9fda6a092b473769fa78fa579f3f21c82f14e00782d75b93b01c188c5054e": {
      "address": "0xBab75eD3AEE0Fa9C73868Fac75CbC11069FD7068",
      "txHash": "0xb8125198d7145b017b8d24b3b8a13a6a0cf1cad332c45affcccd775cba39e748",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:82"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:83"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:84"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:85"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:86"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)24173_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:88"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)24173_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:89"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)24173_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)34150": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)24148": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)24173_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)24173_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)34150",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)24148",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7061f6b541508bb437443f0169214a849222a5a40d5f8f1ab2266b27f6bbc2ca": {
      "address": "0x4D90De3f813685ACAFf03b44dA8a783a62A8dFB0",
      "txHash": "0x3865bf1b0a1a76559fa870bb798890a5c579ac862632cb1f8ca52436e209c497",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)31571",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:142"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23674_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)31571": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23674_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8796_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)23674_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)23674_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "490a5d4702230a1138595cb7ca6ec060ab9991374eb36e71e1fe17c0f0bd12b7": {
      "address": "0xBA757987B6405A94D574aaBE45e66EaCd21D8cc9",
      "txHash": "0xd9f40ed00a5d3ffa27e7949a23a7690d6bc2c980f1bdfab40a1da14e144cd6a5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:83"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:84"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:85"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:86"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:87"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)24734_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:89"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:90"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)24734_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)24734_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityOrderStatus)24708": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)24734_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)24734_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)24708",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8ac2f920b35c0a1195d7ee7b0a0a4919c32e439fe651ab3cea775e919e26c3a7": {
      "address": "0x66B7daf9dCA5626e451b421Bd92B8BeFC52Da9F1",
      "txHash": "0xd879e3cda02d4ac02097c36c49d6d2e85d5e68e6834a49be0f22c7eb24e85302",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:162"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:163"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:164"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)15096",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)15096": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "822981586d8d154f46eb31481c70eb2c57881f923ecbda184c208e674f59ef8d": {
      "address": "0xa65c00be99aE0446036722703c75dd1fbFd7A88E",
      "txHash": "0x738e9d0db23b8bbdb96171e56e5290277c977e550230416e1d85449ae0b22ee7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:170"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:171"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:172"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)15237",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)15237": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9aa3d6ed26cb72bbfa0d5cd7550d23eda054bbc79e5037c8041e373b96d8f08": {
      "address": "0x95Eb7915cd9bad82f68A02A48352910f1a342432",
      "txHash": "0xa29fd66d56b2364b5dadbefacc202c2fd6ecd404b5f64734e394ec8ed13ad2dc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:101"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:102"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:103"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:104"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)14988",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)14988": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3dcc37ccd1e2bb061f85bcfd718a8f3e80c68f3d325273635c3c1982421434e0": {
      "address": "0xE770E62EfFE7dBF0103043787EA65E11EcC41309",
      "txHash": "0x5072275640545960cbdae91e7cd6e97071e4925590933c8b9834c539e90b4e9d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:15"
          },
          {
            "label": "tlc",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:16"
          },
          {
            "label": "tlcStaking",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8f1b61670603faac415cc98d7113e22ea9850f1437c3433808fc309557ffdca3": {
      "address": "0xDCaa1566b0754B2c69F2d0CA59498cB91eB8be7c",
      "txHash": "0x78bfd56cbfed88d92e8c231f24e20c3a30450d3ce25774a24563a09f254cbb1e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)31798",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:18"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)31750_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)31798": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)31750_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)31750_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "112fccf81852ba0a0c671b3429474940a3a3afd58d397ba1ffa37040a6424514": {
      "address": "0x506E9EA52F383696Fb4685CBE86B2832662dA783",
      "txHash": "0xe89c895116e294145f5263219e780910b8363e3f3653e7e5e3d86e34c4cf205f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:47"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)29692_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:48"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:60"
          },
          {
            "label": "maxTrustPriceAge",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)29692_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)29692_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "44878e2a59e85cbdcb2dcfb2ee93664db089524832e61304ea2dd9a00f0edde4": {
      "address": "0xaf27cb598c88De4F49d7A69e1de944C68295da2B",
      "txHash": "0x0131644ac4b3bd508c1c911bf0bc66facc05e6317dd3df3993aecf1876d72ade",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)46813_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:59"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)46818_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)46827_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)46830_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)46744_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46753_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46760_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)46791_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)46794_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)46794_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)46791_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)46744_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46760_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46753_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)46794_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)46744_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)46760_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)46765_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)46753_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)46830_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)46813_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)46791_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)46765_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)46818_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)46827_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba1da18db7bd1bc93d57019781fffac1f4cd85bb42ae91950a864cab65276b34": {
      "address": "0x119F398d57b82D8E6fA62B42DFe0ad860E8F22f2",
      "txHash": "0xb759a36ca02618ac6720ec28609692677a31765de57831dd961bfd4cd7dc7465",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:29"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:30"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:31"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:33"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:34"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:36"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:38"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:39"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:40"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:41"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:43"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:44"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:45"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:46"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:53"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5d1f20e0a03c141f279eab32ab4fd218a222e7ac170f9725a27b0f5e27aec1d": {
      "address": "0x50abF1EcB7b3CA20a59BDd56634cd0fe8513a691",
      "txHash": "0xb4f0b11fa7d7ee6b231dc6742eafa94e618ed9fd0b294ad16245aaf68122fe2b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)47385_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:32"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)47440_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:34"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:35"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)47419_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:37"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)47396_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)8518_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)8639_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)47440_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)47396_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)47419_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8639_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)47396_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)8518_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)47385_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)47419_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)47440_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1c43f09e43cadb33a0100226c65a9c046a54e5a8db826c760c1179c3c1c2ec5": {
      "address": "0xF9ece04CBa92FC864c4B06F5BCb50f4b9F12e0bb",
      "txHash": "0xc83348d7d4819db7a7c584639730c80143445d86bf730524beeb602ab14645cd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)46993_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:59"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)46998_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)47007_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)47010_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)46924_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46933_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46940_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)46971_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)46974_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)46974_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)46971_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)46924_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)46940_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)46933_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)46974_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)46924_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)46940_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)46945_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)46933_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)47010_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)46993_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)46971_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)46945_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)46998_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)47007_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bc5b7fe1f4f4e7411ce7abbb312c14a1a3f85bb255d0aebe5f15d25f167d1ae1": {
      "address": "0xc8532348ba1C77F55A7a5E87163540f1D3cE41F9",
      "txHash": "0x0ac2e09cc26cd07107c8d30919aaf35c2b911df780309e8a1ac78284abacc250",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:24"
          },
          {
            "label": "minPublishTime",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:28"
          },
          {
            "label": "publishTimeDiff",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:31"
          },
          {
            "label": "mapAssetIdToIndex",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:33"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:34"
          },
          {
            "label": "indexCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:35"
          },
          {
            "label": "isUpdaters",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "603fcbdfdb3c9eafc75ac62ed83fd6a6e0885b28e01f073e38db6b0bc014d575": {
      "address": "0xc5b42036D2C8C1b4E5482120E5DeBF5f378396D0",
      "txHash": "0xe830190245ac8f2e5cc8e7c901ee589c7a66af57a5504d5010116baa24d63c20",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)32287",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23987_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32287": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23987_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)23987_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)23987_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6468802c23d40ba353f48f347ec8828c6845f9793cc68a051b71b780bd7bf981": {
      "address": "0xD365E0B6104e88A8f00f5924316F8745C460a7e1",
      "txHash": "0x2e76e0021d05e7c645ccfcea455f2fb493cead40ef1e644c559e9186f7985efb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "916b66c10bd2146fab15a17551a562c42a643457e04e4c7cd1e0d66293e3ae40": {
      "address": "0x070061C5b8405fe3c75B6f8bEee9B86Ce4B83D1B",
      "txHash": "0xf7cc7771107a69923890d5fd3170f08559f7aa8b0dae8693932a6f15db161d93",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:162"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:163"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:164"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)15237",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)15237": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e6e967a9efd3594349f79330b5f77cdc46101a3e3e0a1901e780ec5de321fb10": {
      "address": "0x6eF534DF286F756aFbD8840e9f1B59CBc6C39d85",
      "txHash": "0xf98e0f2bd4321ec94116fee022adc4b0b95745cd54fa0d14fcf259d50a40b7d1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)32424",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24124_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32424": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24124_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24124_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24124_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b02f1a94d7389e8408639dd2820bbc94d8707c3dfc33747ed793f1a0f5706066": {
      "address": "0x43134164C14A0eC4614222A0b829A5Cc5Ecd309E",
      "txHash": "0xc795b2435734b68a6e455719af8dad24ffc6c01c5c75d9634d26879d5c0029d9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)32627",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24315_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32627": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24315_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24315_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24315_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2b1d42da1eab16a5a60f20e3a738d27faca572938b50f8958237ee24aafe695": {
      "address": "0xf967048802CcAF29E701ea2FAb8164671c202eAd",
      "txHash": "0x96601d3ddcdb892d6b89c864f75bee33748370ef06966776f793888f36713515",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)32700",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24384_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32700": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24384_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24384_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24384_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c0270c6557865c45b766ea22f96260304c4882471e7a83cc686f290253e96bd5": {
      "address": "0x37232F8B6aB2d302EEeb877d02a6E81d42dd6D17",
      "txHash": "0x05956e001d0e0752c68789b43c041661b4dcc36b3c51359f596312623db6ffc8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)30568",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23113_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)30568": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23113_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)23113_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)23113_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "406c4f11de9c24000cdd481ec181770011091aec1f120eb348b7eaf4200e35a7": {
      "address": "0xf1E24A45eFb2dAA86C8c2a85f66A1629689A2aC0",
      "txHash": "0x08f0b5fc87516af275813837a01898dc66bb91542ca98ec7d35d8bdccae89e6b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)30631",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23173_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)30631": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)23173_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)23173_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)23173_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34b4702559190b012b139cc99971787e3709fab35c5d3ab43e38b8dd7295712e": {
      "address": "0xF8655fd8C1a0008343d4D8E03Edc1B28755937E7",
      "txHash": "0xcdc9d6248ff390653b72eb6b5e91997a480fb869940da39f9a87432052b51626",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf127c3e86f1be0a9788ae9c99ec942bb31f626db0faa7ffb5fb4bbda7376dfe": {
      "address": "0xa0728495374B6D66d0bdADD1b07B01e40B643fBa",
      "txHash": "0x07abc452f3936f070026f209154fc37eb46a4b90882e64e701d1a8660db64095",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:71"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:72"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:73"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b74509e1c19993c29458befac6632da3195d77fed5732dce21289432819df69": {
      "address": "0x5434E66c654587dc8ccDD79d6784c0487Dd36e1F",
      "txHash": "0x6a7b617f9f049a340330764766a41a383f92dce65f06266936d612d0ecbe388b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:82"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:83"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:84"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:85"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:86"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)24259_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:88"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)24259_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:89"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)24259_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)34180": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)24234": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)24259_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)24259_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)34180",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)24234",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "522115ebb9ff5ba4c373efdb916cd59d05417b8bbe5901e6bbddd5153653db93": {
      "address": "0x3E4A0F2688F028161eE825E5e3c0338C87c90517",
      "txHash": "0x82766dc4fc1d5b3eba464147b8d927313ed553fe13234f58fffdcdbaa6c53087",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)32694",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:143"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:144"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24472_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)8905_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)8905_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32694": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24472_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8905_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24472_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24472_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8433_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8905_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8433_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d28e8ea686e016293706d1b8aa8b5094ba1e244c8fd6830216a2d1bc5be373d2": {
      "address": "0xCE16034134B855Db9396A6Dbb9F4B587720CDee3",
      "txHash": "0xdb2a0ef8f7c6c7f9e742a95251555eb0a92f9d81f94eacf0651e91a12663c35b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:163"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:164"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:165"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)15211",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:166"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)15211": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92ddc9ee90a8db88336adf3fdf23d7bf6192e7653505a218c8e20cfea890640f": {
      "address": "0x769a73Ee2B0066A9e52BD7595fCc21cEA0D194a5",
      "txHash": "0x1605ce282fc6dea06a19b0e967b769c9b6241868f297259d31db0ac7e64c4d24",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:24"
          },
          {
            "label": "minPublishTime",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:28"
          },
          {
            "label": "publishTimeDiff",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:31"
          },
          {
            "label": "mapAssetIdToIndex",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:33"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:34"
          },
          {
            "label": "indexCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:35"
          },
          {
            "label": "isUpdaters",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fbdc140e9836c03dbed4a90f331c0b3e7dc526bd9f7de574a4bbd7630c1e51df": {
      "address": "0x1328Dbd47a6a8F478Cf145c768bc095aB35a7828",
      "txHash": "0x3c60275bb77e5b0823dc5dcb92fc93897e2e98fcd69663be9ac9b2acef51bf6a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:72"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:73"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:74"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:75"
          },
          {
            "label": "convertedSglpStrategy",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2107901df670fb4ad92256f06f311f8af867a613adf73bbd09b5030ae67a4fa4": {
      "address": "0xeBA8210DD2Ce9D4E296d361A887563d4426AC9f9",
      "txHash": "0xb07596e3e5ad67acc53808a16d26e3c0e1bd949ad34ee25513ef1d4810d28d41",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:170"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:171"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:172"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)23307",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)23307": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "061315822aa4dda596d22667ab44312499f02531ca9061ddc7f5d403a5f1d5f9": {
      "address": "0x839213bd7105EBb57DD56009B7644150f256B947",
      "txHash": "0xbbc0a5527d06065095a0c54cccf2b62ae071ea0ec1ad5e8ff239dcd0e6cbae31",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IEcoPyth)40853",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "204",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "204",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "205",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32614_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:157"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(UintSet)17001_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "212",
            "type": "t_struct(UintSet)17001_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "214",
            "type": "t_struct(UintSet)17001_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(UintSet)17001_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(UintSet)17001_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_struct(UintSet)17001_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)40853": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32614_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)17001_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32614_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32614_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16529_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)17001_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16529_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fc610f78e172189ef8f76cee8f4519bcbf1468cc161034ce2b6568cf18b3977": {
      "address": "0xC06C7aA746a4273975002192611001096b85a35b",
      "txHash": "0x7211ba98b2585f77f2761c327e45971433181f1520c7720e2abbe8f64ab49463",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:170"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:171"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:172"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)23307",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)23307": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "830e4ec6c2d91e996af5e54d39be3c176f4b4ade0c79c88ec93d98e5f00cd673": {
      "address": "0x803c26a0084947D65260F654A8248D1940736e9B",
      "txHash": "0x35c0acaa3b059d855b3c23b80f88450544ec38b759cc7cfd3382edd91b0a0270",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)40831",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32592_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:157"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)40831": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32592_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)16892_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32592_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32592_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)16892_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52d28d2fb904b8cb5ba589e617eaa0945b17d5c7bed97f029b5fa8b1e790d704": {
      "address": "0x8629c62f259730C558d62276D8CFFdb7F314775A",
      "txHash": "0xabdbb15e8970d01f4e6f0ce3988df4cbd203a1a383cb55f4ba00bba2d9f99a28",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)40873",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32634_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:157"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)40873": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32634_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)16892_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32634_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32634_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)16892_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a20079a6beadc0aa171c2049719fe76e824fc1cbf6e15272fd0b9025731a818": {
      "address": "0x806552f33082cD8418D6A0bcdABEE485BA4a25Af",
      "txHash": "0xf96bb5733c953f4910e8548157e6326fa85dc78fa5594c343a52738bf79caa1d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)32816",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:149"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:154"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:157"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24577_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:159"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:169"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32816": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24577_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8796_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24577_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24577_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8817572ae7342d9ac318c49970fe0024f4e1f901e5f13c1789067bddfcceac08": {
      "address": "0xfD74Ce77eE316fA9715192554d303F4682154164",
      "txHash": "0x6ae265e948421bb3939132922392bae1ebe067a67282b26d5ac2687534e1ab61",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)32868",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:170"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24629_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:171"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:176"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:177"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)8796_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:180"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:181"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)8796_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)32868": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)24629_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)8796_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)24629_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)24629_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)8324_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8796_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8324_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cc843a88f27bae355511870370b62a40cddd30e283e6935a60595c49fdedcc44": {
      "address": "0x490e087475E1d7Dd5B56Ad37A88c460477001A14",
      "txHash": "0x44e8d47584313fd45039ac8de4478a5a83e0a9b2f26d63792e9208f519bc45f1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)41182",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:170"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32827_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:171"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:176"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:177"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:180"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:181"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)41182": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32827_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)16892_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32827_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32827_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)16892_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd454abe7a8b1dd7f340bc7a301b897baf2e648a18da7e903e4116ee46805af8": {
      "address": "0x05646Cc872e1bAc2E37C7B5EBd05b191aEE75b61",
      "txHash": "0x00903ea7f27b0cf9a9bc2325085b9ead9167bd0d9eac5a76772e9349a9326332",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)41188",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:160"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:170"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32833_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:171"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:176"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:177"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:180"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:181"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)41188": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32833_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)16892_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32833_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32833_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)16892_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3b4dbd08a85a87a9a42c068b82404fdb092a0411bd21a99cd62cd567e0a48c22": {
      "address": "0x153C872085f04a942e71a6a763fC2B284B4C5e5d",
      "txHash": "0x3744568553b7624a3e68a5b4894e0bc1fcc058c6b2ac8202bf71767a1775b0a6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)9127",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:24"
          },
          {
            "label": "rewardRouter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IGmxRewardRouterV2)33236",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:25"
          },
          {
            "label": "glpManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IGmxGlpManager)33198",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:26"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IVaultStorage)56199",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:28"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IConfigStorage)55756",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IConfigStorage)55756": {
            "label": "contract IConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)9127": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxGlpManager)33198": {
            "label": "contract IGmxGlpManager",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxRewardRouterV2)33236": {
            "label": "contract IGmxRewardRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)56199": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d3b6c78f4d7d9ebad9120f27bf7fc96f4acbf9a20351c0bf51c2eaa6960d1b22": {
      "address": "0xdF75189e2CfAa09f7f432F47606081F3B29dDe3F",
      "txHash": "0xbb8cd54816f541e26890d4039c0e23dd5995dfae5f6a8162776785085bee614d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IRebalanceHLPService)46746",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:31"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IVaultStorage)56199",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:32"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IConfigStorage)55756",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:33"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(ICalculator)20252",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:34"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IEcoPyth)38922",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:35"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(IERC20Upgradeable)9127",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:36"
          },
          {
            "label": "minHLPValueLossBPS",
            "offset": 20,
            "slot": "156",
            "type": "t_uint16",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:38"
          },
          {
            "label": "whitelistExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)20252": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_contract(IConfigStorage)55756": {
            "label": "contract IConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)9127": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)38922": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(IRebalanceHLPService)46746": {
            "label": "contract IRebalanceHLPService",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)56199": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
